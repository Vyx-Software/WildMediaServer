@use 'variables' as *;

// Reset and base styles
@import 'normalize.css';

*,
*::before,
*::after {
  box-sizing: border-box;
}

html {
  scroll-behavior: smooth;
}

body {
  margin: 0;
  font-family: $font-family;
  line-height: 1.5;
  background-color: $dark-background;
  color: $dark-text-primary;
  transition: background-color $animation-duration $animation-easing;
}

// Theming
[data-theme="dark"] {
  --background: #{$dark-background};
  --surface: #{$dark-surface};
  --text-primary: #{$dark-text-primary};
  --text-secondary: #{$dark-text-secondary};
}

[data-theme="light"] {
  --background: #{$light-background};
  --surface: #{$light-surface};
  --text-primary: #{$light-text-primary};
  --text-secondary: #{$light-text-secondary};
}

// Layout
.container {
  width: 100%;
  max-width: map-get($breakpoints, xl);
  margin: 0 auto;
  padding: 0 map-get($spacing-map, 2);
}

// Typography
h1, h2, h3, h4, h5, h6 {
  margin: 0 0 map-get($spacing-map, 2);
  line-height: 1.2;
  font-weight: $font-weight-bold;
}

h1 { font-size: 2.5rem; }
h2 { font-size: 2rem; }
h3 { font-size: 1.75rem; }
h4 { font-size: 1.5rem; }

p {
  margin: 0 0 map-get($spacing-map, 2);
}

// Buttons
.button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: map-get($spacing-map, 1) map-get($spacing-map, 2);
  border: none;
  border-radius: 4px;
  font-family: inherit;
  font-weight: $font-weight-bold;
  text-transform: uppercase;
  cursor: pointer;
  transition: 
    background-color $animation-duration $animation-easing,
    box-shadow $animation-duration $animation-easing;

  &--primary {
    background-color: $color-primary;
    color: $dark-text-primary;

    &:hover {
      background-color: darken($color-primary, 10%);
    }
  }

  &--outlined {
    background-color: transparent;
    border: 2px solid $color-primary;
    color: $color-primary;

    &:hover {
      background-color: rgba($color-primary, 0.1);
    }
  }
}

// Forms
.form-control {
  margin-bottom: map-get($spacing-map, 3);

  label {
    display: block;
    margin-bottom: map-get($spacing-map, 1);
    color: var(--text-secondary);
  }

  input {
    width: 100%;
    padding: map-get($spacing-map, 1);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 4px;
    background-color: var(--surface);
    color: var(--text-primary);
    transition: border-color $animation-duration $animation-easing;

    &:focus {
      outline: none;
      border-color: $color-primary;
      box-shadow: 0 0 0 2px rgba($color-primary, 0.2);
    }
  }
}

.error-message {
  color: $color-error;
  font-size: 0.875rem;
  margin-top: map-get($spacing-map, 1);
}

// Media Player Overrides
.video-js {
  border-radius: 8px;
  overflow: hidden;
  
  .vjs-big-play-button {
    background-color: rgba($color-primary, 0.8) !important;
    border: none !important;
    border-radius: 50% !important;
    width: 3em !important;
    height: 3em !important;
    line-height: 3em !important;
    top: 50% !important;
    left: 50% !important;
    transform: translate(-50%, -50%);
  }
}

// Loading Spinner
@keyframes spin {
  to { transform: rotate(360deg); }
}

.loading-spinner {
  display: inline-block;
  width: 2rem;
  height: 2rem;
  border: 3px solid rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  border-top-color: $color-primary;
  animation: spin 1s ease-in-out infinite;
}

// Responsive Utilities
@mixin respond-up($breakpoint) {
  @media (min-width: map-get($breakpoints, $breakpoint)) {
    @content;
  }
}

.grid {
  display: grid;
  gap: map-get($spacing-map, 3);
  
  @include respond-up(md) {
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  }
}

// Helper Classes
.text-center { text-align: center; }
.text-uppercase { text-transform: uppercase; }
.mt-2 { margin-top: map-get($spacing-map, 2); }
.p-3 { padding: map-get($spacing-map, 3); }

// Elevation Shadows
@mixin elevation($level) {
  @if $level == 1 {
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12);
  } @else if $level == 2 {
    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16);
  } @else if $level == 3 {
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19);
  }
}

.card {
  background-color: var(--surface);
  border-radius: 8px;
  @include elevation(1);
  transition: 
    box-shadow $animation-duration $animation-easing,
    transform $animation-duration $animation-easing;

  &:hover {
    @include elevation(2);
    transform: translateY(-2px);
  }
}